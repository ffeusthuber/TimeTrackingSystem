    [ ] TimeTrackingUsecase
        [ ] Clock in
            [X] User can clock in
            [ ] User can not clock in if already clocked in
        [ ] Clock out
            [X] User can clock out
            [ ] User can not clock out if not clocked in
        [ ] Pause
            [X] User can clock pause
            [ ] User can not pause if not clocked in

    [ ] TimeEntry
        [X] entryDateTime gets correctly set when timeEntry is created

    [ ] EmployeeClockStatusService
        [X] Check last TimeEntry for TimeEntryType
        [X] If no TimeEntry is found, return UserStatus.CLOCKED_OUT
        [ ] add test for other status

    [ ] TimeEntryRepository
        [ ] Save timeEntry
        [ ] Find last timeEntry by EmployeeID (could use map with id and stack of time entries for this)

    [ ] EmployeeRepository
        [ ] Find employee by employeeID

    [ ] EmployeeRepositoryAdapter
        [ ] Create GET endpoint for finding employee by employeeID

    [ ] TimeTrackingAdapter
        [ ] Create POST endpoint for clocking in
        [ ] Create POST endpoint for clocking out
        [ ] Create POST endpoint for pausing



    [ ] check if UserId is valid / if user exists

    [ ] Check if UserStatus is valid

    [ ] Check UserStatus
        [ ] User is clocked in
        [ ] User is clocked out